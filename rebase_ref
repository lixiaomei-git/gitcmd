git rebase：用来改变一串提交以什么为基础，此命令至少需要提交将迁往的分支名，一般 情况下，不在目标分支中的当前分支提交会变基
1. 向前移植（保持你正在开发的一系列提交相对于另一个分支是最新的）
git rebase master topic		//topic这个分支就会变成基于master的最新的提交的
2.把一条分支上的开发线整个移植到完全不同的分支
比如特性分支feature，基于maint分支的倒数第二个版本
特性分支的feature上提交了P，Q
git rebase --onto master maint^ feature		//把feature分支上的提交P，Q从maint分支迁移到了master分支

遇到冲突，解决冲突（或者使用git rebase --skip跳过这个提交），使用git rebase --continue恢复变基操作
git rebase --abort中止变基操作

3.git rebase -i master～3		//合并历史记录

变基一系列提交的过程会导致git生成一系列全新的提交，如果有额外的分支基于你想变基的分支，可能出现问题

对有合并的分支进行变基会把原始分支历史（带合并）线性化到新的base分支
如果要保留合并结构 git rebase --preserve-merges master dev

重要：
变基把提交重写成新提交
不可达的旧提交会消失
任何旧的，变基前的提交的用户可能被困住
如果你有个分支用变基前的提交，你可能需要反过来对它变基
如果有个用户有不同版本库中变基前的提交，即使它已经移动到了你的版本库中，他仍然拥有该提交的副本，该用户现在必须也修复他的提交历史记录

